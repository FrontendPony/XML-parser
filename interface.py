# Form implementation generated from reading ui file 'interface_super_mega_updated_3.ui'
#
# Created by: PyQt6 UI code generator 6.5.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import psycopg2
from PyQt6.QtWidgets import QTableWidget, QCompleter
from PyQt6.QtCore import Qt
from dbsettings import database_parametres
import pandas as pd
from sqlalchemy import create_engine
from dbsettings import database_parametres

class Ui_Dialog2(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(921, 308)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_222 = QtWidgets.QLabel(parent=Dialog)
        self.label_222.setObjectName("label_222")
        self.verticalLayout.addWidget(self.label_222)
        self.tableWidget_44 = QtWidgets.QTableWidget(parent=Dialog)
        self.tableWidget_44 .setMinimumSize(QtCore.QSize(0, 80))
        self.tableWidget_44 .setMaximumSize(QtCore.QSize(16777215, 80))
        self.tableWidget_44 .setRowCount(1)
        self.tableWidget_44 .setColumnCount(4)
        self.tableWidget_44 .setHorizontalHeaderLabels(['counter', 'author_id', 'author_name', 'author_initials'])
        self.tableWidget_44 .setObjectName("tableWidget_44")
        self.verticalLayout.addWidget(self.tableWidget_44)
        self.label_228 = QtWidgets.QLabel(parent=Dialog)
        self.label_228.setObjectName("label_228")
        self.verticalLayout.addWidget(self.label_228)
        self.tableWidget_228 = QtWidgets.QTableWidget(parent=Dialog)
        self.tableWidget_228.setMinimumSize(QtCore.QSize(0, 80))
        self.tableWidget_228.setMaximumSize(QtCore.QSize(16777215, 80))
        self.tableWidget_228.setRowCount(1)
        self.tableWidget_228.setColumnCount(4)
        self.tableWidget_228.setHorizontalHeaderLabels(['counter', 'author_id', 'author_name', 'author_initials'])
        self.tableWidget_228.setObjectName("tableWidget_228")
        self.verticalLayout.addWidget(self.tableWidget_228)
        self.pushButton = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.pushButton_28 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_28.setObjectName("pushButton_28")
        self.verticalLayout.addWidget(self.pushButton_28)
        self.pushButton_38 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_38.setObjectName("pushButton_38")
        self.verticalLayout.addWidget(self.pushButton_38)
        self.pushButton_48 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_48.setObjectName("pushButton_48")
        self.verticalLayout.addWidget(self.pushButton_48)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        #self.label_222.setText(_translate("Dialog", "<strong>Данные из Excel</strong>"))
        #self.label_228.setText(_translate("Dialog", "<strong>Данные из БД</strong>"))
        self.pushButton.setText(_translate("Dialog", "Оставить верхний вариант"))
        self.pushButton_28.setText(_translate("Dialog", "Оставить нижний вариант"))
        self.pushButton_38.setText(_translate("Dialog", "Оставить обоих людей"))
        self.pushButton_48.setText(_translate("Dialog", "Добавить дополнительный ID автору"))
class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(822, 367)
        Dialog.setWindowFlag(QtCore.Qt.WindowType.FramelessWindowHint)
        self.widget = QtWidgets.QWidget(parent=Dialog)
        self.widget.setGeometry(QtCore.QRect(0, 0, 821, 364))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.pushButton = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/x_close_cross_delete_icon_159748.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(20, 20))
        self.pushButton.setCheckable(False)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_2.addWidget(self.pushButton, 0, QtCore.Qt.AlignmentFlag.AlignRight)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(parent=self.widget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.row_from_database = QtWidgets.QTableWidget(parent=self.widget)
        column_names = self.getColumnNames()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.row_from_database.sizePolicy().hasHeightForWidth())
        self.row_from_database.setSizePolicy(sizePolicy)
        self.row_from_database.setMaximumSize(QtCore.QSize(16777215, 82))
        self.row_from_database.setStyleSheet("QHeaderView::section  {\n"
"        background-color: #5f6f97;\n"
"        font-size: 12pt;\n"
"        color: white;\n"
"        font-weight: bold;\n"
"    }\n"
"QTableWidget QTableCornerButton::section  {\n"
"        background-color: #5f6f97;\n"
"    }")
        self.row_from_database.setRowCount(1)
        self.row_from_database.setColumnCount(100)
        self.row_from_database.setHorizontalHeaderLabels(column_names)
        self.row_from_database.setObjectName("row_from_database")
        self.row_from_database.horizontalHeader().setDefaultSectionSize(100)
        self.row_from_database.horizontalHeader().setMinimumSectionSize(50)
        self.row_from_database.verticalHeader().setDefaultSectionSize(40)
        self.row_from_database.verticalHeader().setMinimumSectionSize(40)
        self.verticalLayout.addWidget(self.row_from_database)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.button_lower_table_choice = QtWidgets.QPushButton(parent=self.widget)
        self.button_lower_table_choice.setMinimumSize(QtCore.QSize(0, 130))
        self.button_lower_table_choice.setStyleSheet("#button_lower_table_choice {\n"
"        color:white;\n"
"        background-color:#aebdd0;\n"
"        font-weight: bold;\n"
"        font-size: 16pt;\n"
"        border-radius: 25px;\n"
"    }")
        self.button_lower_table_choice.setFlat(False)
        self.button_lower_table_choice.setObjectName("button_lower_table_choice")
        self.horizontalLayout.addWidget(self.button_lower_table_choice)
        self.button_upper_table_choice = QtWidgets.QPushButton(parent=self.widget)
        self.button_upper_table_choice.setMinimumSize(QtCore.QSize(0, 130))
        self.button_upper_table_choice.setStyleSheet("#button_upper_table_choice {\n"
"        color:white;\n"
"        background-color:#5f6f97;\n"
"        font-weight: bold;\n"
"        font-size: 16pt;\n"
"        border-radius: 25px;\n"
"    }")
        self.button_upper_table_choice.setObjectName("button_upper_table_choice")
        self.horizontalLayout.addWidget(self.button_upper_table_choice)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.row_from_excel = QtWidgets.QTableWidget(parent=self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.row_from_excel.sizePolicy().hasHeightForWidth())
        self.row_from_excel.setSizePolicy(sizePolicy)
        self.row_from_excel.setMaximumSize(QtCore.QSize(16777215, 82))
        self.row_from_excel.setStyleSheet("QHeaderView::section:second  {\n"
"        background-color:#aebdd0;\n"
"        font-size: 12pt;\n"
"        color: white;\n"
"        font-weight: bold;\n"
"    }\n"
"QTableWidget QTableCornerButton::section  {\n"
"        background-color: #aebdd0;\n"
"    }")
        self.row_from_excel.setRowCount(1)
        self.row_from_excel.setColumnCount(100)
        self.row_from_excel.setHorizontalHeaderLabels(column_names)
        self.row_from_excel.setObjectName("row_from_excel")
        self.row_from_excel.verticalHeader().setDefaultSectionSize(40)
        self.row_from_excel.verticalHeader().setMinimumSectionSize(40)
        self.verticalLayout.addWidget(self.row_from_excel)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.pushButton.raise_()

        self.retranslateUi(Dialog)
        self.pushButton.clicked.connect(Dialog.hide) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def getColumnNames(self):
        query = "SELECT * FROM article WHERE 1=0;"
        connection_str = f"postgresql://{database_parametres['user']}:{database_parametres['password']}@{database_parametres['host']}:{database_parametres['port']}/{database_parametres['dbname']}"
        engine = create_engine(connection_str)
        existing_data = pd.read_sql(query, engine)
        data = pd.read_sql_query(query, engine)
        column_names = data.columns.tolist()
        return column_names
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "TextLabel"))
        self.button_lower_table_choice.setText(_translate("Dialog", "Нижний вариант"))
        self.button_upper_table_choice.setText(_translate("Dialog", "Верхний вариант"))


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowIcon(QtGui.QIcon("icons/ipng_logo.png"))
        MainWindow.resize(1181, 890)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.previous_cell_values = {}
        self.centralwidget.setStyleSheet("#centrealwidget {\n"
"color: #4d4b4f\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.widget_3 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_3.setObjectName("widget_3")
        self.widget = QtWidgets.QWidget(parent=self.widget_3)
        self.widget.setGeometry(QtCore.QRect(10, 10, 961, 42))
        self.widget.setObjectName("widget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.menu_button = QtWidgets.QPushButton(parent=self.widget)
        self.menu_button.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/588a6507d06f6719692a2d15.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.menu_button.setIcon(icon)
        self.menu_button.setIconSize(QtCore.QSize(25, 25))
        self.menu_button.setCheckable(True)
        self.menu_button.setObjectName("menu_button")
        self.horizontalLayout_3.addWidget(self.menu_button)
        spacerItem = QtWidgets.QSpacerItem(884, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.user_button = QtWidgets.QPushButton(parent=self.widget)
        self.user_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/2343640.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.user_button.setIcon(icon1)
        self.user_button.setIconSize(QtCore.QSize(25, 25))
        self.user_button.setObjectName("user_button")
        self.horizontalLayout_3.addWidget(self.user_button)
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.widget_3)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 50, 971, 831))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.page)
        self.tableWidget.setGeometry(QtCore.QRect(10, 40, 951, 611))
        self.tableWidget.setRowCount(100)
        self.tableWidget.setColumnCount(100)
        column_names = ["item_id", "author_name", "linkurl", "genre", "type", "journal_title", "publisher",
                        "title_article"]
        self.tableWidget.setHorizontalHeaderLabels(column_names)
        self.tableWidget.setObjectName("tableWidget")
        self.textEdit = QtWidgets.QTextEdit(parent=self.page)
        self.textEdit.setGeometry(QtCore.QRect(90, 0, 191, 31))
        self.textEdit.setStyleSheet("QTextEdit {\n"
"    border: 1px solid #ced4da;\n"
"    font-size: 10pt;\n"
"        color: gray;\n"
"        font-weight: bold;\n"
"    border-radius:16px;\n"
"}\n"
"\n"
"")
        self.textEdit.setObjectName("textEdit")
        self.comboBox = QtWidgets.QComboBox(parent=self.page)
        self.comboBox.setGeometry(QtCore.QRect(10, 0, 71, 31))
        self.comboBox.setStyleSheet("#comboBox{\n"
"    border: 1px solid #ced4da;\n"
"    border-radius:4px;\n"
"    padding-left:10px;\n"
"}\n"
"\n"
"#comboBox::drop-down {\n"
"    border: 0px;\n"
"}\n"
"\n"
"#comboBox::down-arrow {\n"
"    image: url(:/jg/arrow-204-32.ico);\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    margin-right:15px;\n"
"}\n"
"\n"
"#comboBox:on {\n"
"     border: 4px solid #c2dbfe;\n"
" }\n"
"\n"
"QComboBox QListView {\n"
"    font-size: 12px;\n"
"    border:1px solid rgba(0,0,0,10%);\n"
"    padding:5px;\n"
"    background-color: #fff;\n"
"    outline: 0px;  /*去虚线*/\n"
"}\n"
"\n"
"QComboBox QListView::item{\n"
"    padding-left:10px;\n"
"    background-color:#FFFFFF;\n"
"}\n"
"QComboBox QListView::item:hover{\n"
"   background-color:#1e90ff;\n"
"}\n"
"QComboBox QListView::item:selected{\n"
"   background-color:#1e90ff;\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.Primary = QtWidgets.QPushButton(parent=self.page)
        self.Primary.setGeometry(QtCore.QRect(300, 0, 161, 31))
        self.Primary.setStyleSheet("QPushButton {\n"
"    font-size: 12pt;\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    border-radius: 8px;\n"
"}\n"
"\n"
"#Primary {\n"
"\n"
"    background-color:#eedd66;\n"
"}\n"
"\n"
"#Primary:hover {\n"
"    background-color: #eedd66f;\n"
"}\n"
"\n"
"#Primary:pressed {\n"
"    border: 4px solid #98c1fe;\n"
"}")
        self.Primary.setObjectName("Primary")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.widget1 = QtWidgets.QWidget(parent=self.page_2)
        self.widget1.setGeometry(QtCore.QRect(10, 0, 961, 831))
        self.widget1.setObjectName("widget1")
        self.tableWidget_article_2 = QtWidgets.QTableWidget(parent=self.widget1)
        self.tableWidget_article_2.setGeometry(QtCore.QRect(0, 60, 971, 631))
        self.tableWidget_article_2.setRowCount(0)
        self.tableWidget_article_2.setColumnCount(26)
        column_names_article = self.getColumnNames('article')
        # self.tableWidget_article_2.setEditTriggers(QTableWidget.EditTrigger.AllEditTriggers)
        self.dataLoadFromDB(self.tableWidget_article_2, 'SELECT * FROM article ORDER BY item_id')
        self.tableWidget_article_2.itemChanged.connect(self.handleItemChanged)
        self.tableWidget_article_2.setHorizontalHeaderLabels(column_names_article)
        self.tableWidget_article_2.setObjectName("tableWidget_article_2")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.page_2)
        self.pushButton_3.setGeometry(QtCore.QRect(230, 0, 121, 31))
        self.pushButton_3.setStyleSheet("QPushButton {\n"
                                        "    font-size: 12pt;\n"
                                        "    color: yellow;\n"
                                        "    font-weight: bold;\n"
                                        "    border-radius: 8px;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_3 {\n"
                                        "    background-color:#eedd66;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_3:hover {\n"
                                        "    background-color: #eedd66f;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_3:pressed {\n"
                                        "    border: 4px solid #98c1fe;\n"
                                        "}")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.setText("Поиск")
        self.textEdit_22 = QtWidgets.QTextEdit(parent=self.page_2)
        self.textEdit_22.setGeometry(QtCore.QRect(10, 0, 191, 31))
        self.textEdit_22.setStyleSheet("QTextEdit {\n"
                                      "    border: 1px solid #ced4da;\n"
                                      "    font-size: 10pt;\n"
                                      "        color: gray;\n"
                                      "        font-weight: bold;\n"
                                      "    border-radius:16px;\n"
                                      "}\n"
                                      "")
        self.textEdit_22.setObjectName("textEdit_22")
        self.widget1 = QtWidgets.QWidget(parent=self.page_2)
        self.widget1.setGeometry(QtCore.QRect(390, 0, 42, 50))
        self.widget1.setObjectName("widget1")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.pushButton_6 = QtWidgets.QPushButton(parent=self.widget1)
        self.pushButton_6.setStyleSheet("QPushButton {\n"
                                        "    font-size: 12pt;\n"
                                        "    color: white;\n"
                                        "    font-weight: bold;\n"
                                        "    border-radius: 8px;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary {\n"
                                        "    background-color:#eedd66;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary:hover {\n"
                                        "    background-color: #eedd66f;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary:pressed {\n"
                                        "    border: 4px solid #98c1fe;\n"
                                        "}")
        self.pushButton_6.setText("")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("icons/upper_arrow.jpeg"), QtGui.QIcon.Mode.Normal,
                        QtGui.QIcon.State.Off)
        self.pushButton_6.setIcon(icon22)
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout_5.addWidget(self.pushButton_6)
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.widget1)
        self.pushButton_4.setStyleSheet("QPushButton {\n"
                                        "    font-size: 12pt;\n"
                                        "    color: yellow;\n"
                                        "    font-weight: bold;\n"
                                        "    border-radius: 8px;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary {\n"
                                        "    background-color:#eedd66;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary:hover {\n"
                                        "    background-color: #eedd66f;\n"
                                        "}\n"
                                        "\n"
                                        "#Primary:pressed {\n"
                                        "    border: 4px solid #98c1fe;\n"
                                        "}")
        self.pushButton_4.setText("")
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap("icons/down_arrow.jpeg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_4.setIcon(icon33)
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout_5.addWidget(self.pushButton_4)
        self.changeDatainDatabaseButton_2 = QtWidgets.QPushButton(parent=self.widget1)
        self.changeDatainDatabaseButton_2.setGeometry(QtCore.QRect(310, 770, 341, 51))
        #self.changeDatainDatabaseButton_2.clicked.connect(lambda: self.readDataFromTableWidgetAndPushToSQL(self.tableWidget_article_2))
        self.changeDatainDatabaseButton_2.setObjectName("changeDatainDatabaseButton_2")
        self.stackedWidget.addWidget(self.page_2)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.tableWidget_add_row = QtWidgets.QTableWidget(parent=self.page_7)
        self.tableWidget_add_row.setGeometry(QtCore.QRect(30, 40, 911, 71))
        self.tableWidget_add_row.setRowCount(1)
        self.tableWidget_add_row.setColumnCount(27)
        self.tableWidget_add_row.setHorizontalHeaderLabels(column_names_article)
        self.tableWidget_add_row.setObjectName("tableWidget_add_row")
        self.add_one_row_button = QtWidgets.QPushButton(parent=self.page_7)
        self.add_one_row_button.setGeometry(QtCore.QRect(250, 260, 491, 191))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/icone-excel-jaune.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.add_one_row_button.setIcon(icon2)
        self.add_one_row_button.setIconSize(QtCore.QSize(90, 90))
        self.add_one_row_button.setObjectName("add_one_row_button")
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.progressBar = QtWidgets.QProgressBar(parent=self.page_8)
        self.progressBar.setGeometry(QtCore.QRect(80, 420, 821, 161))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.progressBar.setFont(font)
        self.progressBar.setStyleSheet("#progressBar {background-color: rgb(98, 114, 164);\n"
"color: rgb(200, 200, 200);\n"
"border-style: none;\n"
"border-radius: 10px;\n"
"text-align: center;\n"
"}\n"
"#progressBar::chunk {\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 128, 8, 255), stop:1 rgba(255, 200, 55, 255));\n"
"    border-radius: 10px;\n"
"}\n"
"")
        self.progressBar.setProperty("value", 89)
        self.progressBar.setObjectName("progressBar")
        self.label_4 = QtWidgets.QLabel(parent=self.page_8)
        self.label_4.setGeometry(QtCore.QRect(140, 90, 681, 211))
        font = QtGui.QFont()
        font.setPointSize(50)
        font.setBold(True)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("#label_4 {\n"
"color: #4d4b4f;\n"
"font-weight: bold;\n"
"font-size: 50pt;\n"
"}")
        self.label_4.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.stackedWidget.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.widget_2 = QtWidgets.QWidget(parent=self.page_9)
        self.widget_2.setGeometry(QtCore.QRect(10, 0, 971, 831))
        self.widget_2.setObjectName("widget_2")
        self.pushButton = QtWidgets.QPushButton(parent=self.widget_2)
        self.pushButton.setGeometry(QtCore.QRect(570, 10, 301, 71))
        self.pushButton.setIcon(icon2)
        self.pushButton.setIconSize(QtCore.QSize(50, 50))
        self.pushButton.setObjectName("pushButton")
        self.Primary_3 = QtWidgets.QPushButton(parent=self.widget_2)
        self.Primary_3.setGeometry(QtCore.QRect(360, 50, 161, 31))
        self.Primary_3.setStyleSheet("QPushButton {\n"
"    font-size: 12pt;\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    border-radius: 8px;\n"
"}\n"
"\n"
"#Primary_3 {\n"
"    background-color:#eedd66;\n"
"}\n"
"\n"
"#Primary_3:hover {\n"
"    background-color: #eedd66f;\n"
"}\n"
"\n"
"#Primary_3:pressed {\n"
"    border: 4px solid #98c1fe;\n"
"}")
        self.Primary_3.setObjectName("Primary_3")
        self.textEdit_2 = QtWidgets.QLineEdit(parent=self.widget_2)
        data_textEdit = self.loadFullNamesFromDB()
        # self.articleDB_button.clicked.connect(lambda: self.dataLoadFromDB(self.tableWidget_article_2, 'SELECT * FROM article'))
        # Create a QCompleter and set it for the QLineEdit
        completer = QCompleter(data_textEdit)
        completer.setCaseSensitivity(Qt.CaseSensitivity.CaseInsensitive)
        self.textEdit_2.setCompleter(completer)
        self.textEdit_2.setGeometry(QtCore.QRect(170, 50, 181, 31))
        self.textEdit_2.setStyleSheet("QTextEdit {\n"
"    border: 1px solid #ced4da;\n"
"    font-size: 10pt;\n"
"        color: gray;\n"
"        font-weight: bold;\n"
"    border-radius:16px;\n"
"}\n"
"\n"
"")
        self.textEdit_2.setObjectName("textEdit_2")
        self.tableWidget_2 = QtWidgets.QTableWidget(parent=self.widget_2)
        self.tableWidget_2.setGeometry(QtCore.QRect(10, 90, 951, 611))
        self.tableWidget_2.setRowCount(100)
        self.tableWidget_2.setColumnCount(100)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.comboBox_2 = QtWidgets.QComboBox(parent=self.widget_2)
        self.comboBox_2.setGeometry(QtCore.QRect(10, 50, 71, 31))
        self.comboBox_2.setStyleSheet("#comboBox{\n"
"    border: 1px solid #ced4da;\n"
"    border-radius:4px;\n"
"    padding-left:10px;\n"
"}\n"
"\n"
"#comboBox::drop-down {\n"
"    border: 0px;\n"
"}\n"
"\n"
"#comboBox::down-arrow {\n"
"    image: url(:/jg/arrow-204-32.ico);\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    margin-right:15px;\n"
"}\n"
"\n"
"#comboBox:on {\n"
"     border: 4px solid #c2dbfe;\n"
" }\n"
"\n"
"QComboBox QListView {\n"
"    font-size: 12px;\n"
"    border:1px solid rgba(0,0,0,10%);\n"
"    padding:5px;\n"
"    background-color: #fff;\n"
"    outline: 0px;  /*去虚线*/\n"
"}\n"
"\n"
"QComboBox QListView::item{\n"
"    padding-left:10px;\n"
"    background-color:#FFFFFF;\n"
"}\n"
"QComboBox QListView::item:hover{\n"
"   background-color:#1e90ff;\n"
"}\n"
"QComboBox QListView::item:selected{\n"
"   background-color:#1e90ff;\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_3 = QtWidgets.QComboBox(parent=self.widget_2)
        self.comboBox_3.setGeometry(QtCore.QRect(90, 50, 71, 31))
        self.comboBox_3.setStyleSheet("#comboBox{\n"
"    border: 1px solid #ced4da;\n"
"    border-radius:4px;\n"
"    padding-left:10px;\n"
"}\n"
"\n"
"#comboBox::drop-down {\n"
"    border: 0px;\n"
"}\n"
"\n"
"#comboBox::down-arrow {\n"
"    image: url(:/jg/arrow-204-32.ico);\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    margin-right:15px;\n"
"}\n"
"\n"
"#comboBox:on {\n"
"     border: 4px solid #c2dbfe;\n"
" }\n"
"\n"
"QComboBox QListView {\n"
"    font-size: 12px;\n"
"    border:1px solid rgba(0,0,0,10%);\n"
"    padding:5px;\n"
"    background-color: #fff;\n"
"    outline: 0px;  /*去虚线*/\n"
"}\n"
"\n"
"QComboBox QListView::item{\n"
"    padding-left:10px;\n"
"    background-color:#FFFFFF;\n"
"}\n"
"QComboBox QListView::item:hover{\n"
"   background-color:#1e90ff;\n"
"}\n"
"QComboBox QListView::item:selected{\n"
"   background-color:#1e90ff;\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.stackedWidget.addWidget(self.page_9)
        self.page_10 = QtWidgets.QWidget()
        self.page_10.setObjectName("page_10")
        self.tableWidget_for_selecting_columns = QtWidgets.QTableWidget(parent=self.page_10)
        self.tableWidget_for_selecting_columns.setGeometry(QtCore.QRect(20, 60, 911, 71))
        self.tableWidget_for_selecting_columns.setRowCount(1)
        self.tableWidget_for_selecting_columns.setColumnCount(100)
        self.comboboxes = []

        for column in range(38):
                combobox_name = f"combobox{column + 1}"

                setattr(self, combobox_name, QtWidgets.QComboBox())

                data = [
                        "None", "item_id", "linkurl", "genre", "type", "journal_title", "issn", "eissn",
                        "publisher", "vak", "rcsi", "wos", "scopus", "quartile", "year", "number",
                        "contnumber", "volume", "page_begin", "page_end", "language",
                        "title_article", "doi", "edn", "grnti", "risc", "corerisc",
                        "last_name", "first_name", "patronymic", "position", "degree", "employment_relationship",
                        "birth_year", "author_count", "aff_count", "org_id", "org_name"
                ]

                combobox = getattr(self, combobox_name)

                combobox.clear()
                combobox.addItems(data)
                self.tableWidget_for_selecting_columns.setCellWidget(0, column, combobox)

                self.comboboxes.append(combobox)
        self.tableWidget_for_selecting_columns.setObjectName("tableWidget_for_selecting_columns")
        self.general_data_export_button = QtWidgets.QPushButton(parent=self.page_10)
        self.general_data_export_button.setGeometry(QtCore.QRect(230, 250, 491, 191))
        self.general_data_export_button.setIcon(icon2)
        self.general_data_export_button.setIconSize(QtCore.QSize(90, 90))
        self.general_data_export_button.setObjectName("general_data_export_button")
        self.stackedWidget.addWidget(self.page_10)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.tableWidget_article_author = QtWidgets.QTableWidget(parent=self.page_3)
        self.tableWidget_article_author.setGeometry(QtCore.QRect(10, 90, 951, 611))
        self.tableWidget_article_author.setObjectName("tableWidget_article_author")
        self.tableWidget_article_author.setColumnCount(2)
        self.tableWidget_article_author.setRowCount(100)
        column_names_ao_linkage = self.getColumnNames('article_authors_linkage')
        self.tableWidget_article_author.setHorizontalHeaderLabels(column_names_ao_linkage)
        self.dataLoadFromDB(self.tableWidget_article_author, 'SELECT * FROM article_authors_linkage ORDER BY item_id, counter')
        self.tableWidget_article_author.itemChanged.connect(self.handleItemChanged_2)
        self.pushButton_7 = QtWidgets.QPushButton(parent=self.page_3)
        self.pushButton_7.setGeometry(QtCore.QRect(250, 0, 101, 31))
        self.pushButton_7.setStyleSheet("QPushButton {\n"
                                        "    font-size: 12pt;\n"
                                        "    color: yellow;\n"
                                        "    font-weight: bold;\n"
                                        "    border-radius: 8px;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_7 {\n"
                                        "    background-color:#eedd66;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_7:hover {\n"
                                        "    background-color: #eedd66f;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_7:pressed {\n"
                                        "    border: 4px solid #98c1fe;\n"
                                        "}")
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.setText("Поиск")
        self.textEdit_3 = QtWidgets.QTextEdit(parent=self.page_3)
        self.textEdit_3.setGeometry(QtCore.QRect(10, 0, 211, 31))
        self.textEdit_3.setStyleSheet("QTextEdit {\n"
                                       "    border: 1px solid #ced4da;\n"
                                       "    font-size: 10pt;\n"
                                       "        color: gray;\n"
                                       "        font-weight: bold;\n"
                                       "    border-radius:16px;\n"
                                       "}\n"
                                       "")
        self.textEdit_3.setObjectName("textEdit_3")
        self.widget1 = QtWidgets.QWidget(parent=self.page_3)
        self.widget1.setGeometry(QtCore.QRect(370, 0, 38, 56))
        self.widget1.setObjectName("widget1")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.pushButton_8 = QtWidgets.QPushButton(parent=self.widget1)
        self.pushButton_8.setText("")
        self.pushButton_8.setIcon(icon22)
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout_6.addWidget(self.pushButton_8)
        self.pushButton_9 = QtWidgets.QPushButton(parent=self.widget1)
        self.pushButton_9.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("Arrow-Down-PNG-Background_2.png"), QtGui.QIcon.Mode.Normal,
                        QtGui.QIcon.State.Off)
        self.pushButton_9.setIcon(icon33)
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_6.addWidget(self.pushButton_9)
        self.stackedWidget.addWidget(self.page_3)
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.tableWidget_authors = QtWidgets.QTableWidget(parent=self.page_4)
        self.tableWidget_authors.setGeometry(QtCore.QRect(10, 90, 951, 611))
        self.tableWidget_authors.setObjectName("tableWidget_authors")
        self.tableWidget_authors.setColumnCount(6)
        self.tableWidget_authors.setRowCount(100)
        column_names_authors_organisations = self.getColumnNames('authors_organisations')
        self.tableWidget_authors.setHorizontalHeaderLabels(column_names_authors_organisations)
        self.dataLoadFromDB(self.tableWidget_authors, 'SELECT * FROM authors_organisations ORDER BY counter')
        self.tableWidget_authors.itemChanged.connect(self.handleItemChanged_3)
        self.pushButton_10 = QtWidgets.QPushButton(parent=self.page_4)
        self.pushButton_10.setGeometry(QtCore.QRect(190, 20, 101, 31))
        self.pushButton_10.setStyleSheet("QPushButton {\n"
                                        "    font-size: 12pt;\n"
                                        "    color: yellow;\n"
                                        "    font-weight: bold;\n"
                                        "    border-radius: 8px;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_10 {\n"
                                        "    background-color:#eedd66;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_10:hover {\n"
                                        "    background-color: #eedd66f;\n"
                                        "}\n"
                                        "\n"
                                        "#pushButton_10:pressed {\n"
                                        "    border: 4px solid #98c1fe;\n"
                                        "}")
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_10.setText("Поиск")
        self.textEdit_4 = QtWidgets.QTextEdit(parent=self.page_4)
        self.textEdit_4.setGeometry(QtCore.QRect(10, 20, 171, 31))
        self.textEdit_4.setStyleSheet("QTextEdit {\n"
                                       "    border: 1px solid #ced4da;\n"
                                       "    font-size: 10pt;\n"
                                       "        color: gray;\n"
                                       "        font-weight: bold;\n"
                                       "    border-radius:16px;\n"
                                       "}\n"
                                       "")
        self.textEdit_4.setObjectName("textEdit_4")
        self.widget2 = QtWidgets.QWidget(parent=self.page_4)
        self.widget2.setGeometry(QtCore.QRect(310, 10, 41, 56))
        self.widget2.setObjectName("widget2")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.widget2)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.pushButton_11 = QtWidgets.QPushButton(parent=self.widget2)
        self.pushButton_11.setText("")
        self.pushButton_11.setIcon(icon22)
        self.pushButton_11.setObjectName("pushButton_11")
        self.verticalLayout_7.addWidget(self.pushButton_11)
        self.pushButton_12 = QtWidgets.QPushButton(parent=self.widget2)
        self.pushButton_12.setText("")
        self.pushButton_12.setIcon(icon33)
        self.pushButton_12.setObjectName("pushButton_12")
        self.verticalLayout_7.addWidget(self.pushButton_12)
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setEnabled(True)
        self.page_6.setObjectName("page_6")
        self.stackedWidget.addWidget(self.page_6)
        self.gridLayout.addWidget(self.widget_3, 0, 2, 1, 1)
        self.widget_onlyicons = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_onlyicons.setMaximumSize(QtCore.QSize(51, 16777215))
        self.widget_onlyicons.setObjectName("widget_onlyicons")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_onlyicons)
        self.verticalLayout_3.setContentsMargins(0, 9, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(parent=self.widget_onlyicons)
        self.label.setMinimumSize(QtCore.QSize(50, 50))
        self.label.setMaximumSize(QtCore.QSize(50, 50))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("icons/ipng_logo.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.verticalLayout.addItem(spacerItem1)
        self.home_button_iconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.home_button_iconwidget.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/free-home-icon-2502-thumb.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.home_button_iconwidget.setIcon(icon3)
        self.home_button_iconwidget.setIconSize(QtCore.QSize(20, 20))
        self.home_button_iconwidget.setCheckable(True)
        self.home_button_iconwidget.setAutoExclusive(True)
        self.home_button_iconwidget.setObjectName("home_button_iconwidget")
        self.verticalLayout.addWidget(self.home_button_iconwidget)
        self.articleDB_button_iconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.articleDB_button_iconwidget.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/database-icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.articleDB_button_iconwidget.setIcon(icon4)
        self.articleDB_button_iconwidget.setIconSize(QtCore.QSize(20, 20))
        self.articleDB_button_iconwidget.setCheckable(True)
        self.articleDB_button_iconwidget.setAutoExclusive(True)
        # self.articleDB_button_iconwidget.clicked.connect(lambda: self.dataLoadFromDB(self.tableWidget_article_2, 'SELECT * FROM article'))
        self.articleDB_button_iconwidget.setObjectName("articleDB_button_iconwidget")
        self.verticalLayout.addWidget(self.articleDB_button_iconwidget)
        self.article_authorDB_button_iconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.article_authorDB_button_iconwidget.setText("")
        self.article_authorDB_button_iconwidget.setIcon(icon4)
        self.article_authorDB_button_iconwidget.setIconSize(QtCore.QSize(20, 20))
        self.article_authorDB_button_iconwidget.setCheckable(True)
        self.article_authorDB_button_iconwidget.setAutoExclusive(True)
        self.article_authorDB_button_iconwidget.setObjectName("article_authorDB_button_iconwidget")
        self.verticalLayout.addWidget(self.article_authorDB_button_iconwidget)
        self.addingdatatoBD_button_iconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.addingdatatoBD_button_iconwidget.setText("")
        self.addingdatatoBD_button_iconwidget.setIcon(icon4)
        self.addingdatatoBD_button_iconwidget.setIconSize(QtCore.QSize(20, 20))
        self.addingdatatoBD_button_iconwidget.setCheckable(False)
        self.addingdatatoBD_button_iconwidget.setAutoExclusive(True)
        self.addingdatatoBD_button_iconwidget.setObjectName("addingdatatoBD_button_iconwidget")
        self.verticalLayout.addWidget(self.addingdatatoBD_button_iconwidget)
        self.import_button_onlyiconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.import_button_onlyiconwidget.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/154837.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.import_button_onlyiconwidget.setIcon(icon5)
        self.import_button_onlyiconwidget.setIconSize(QtCore.QSize(20, 20))
        self.import_button_onlyiconwidget.setCheckable(True)
        self.import_button_onlyiconwidget.setAutoExclusive(True)
        self.import_button_onlyiconwidget.setObjectName("import_button_onlyiconwidget")
        self.verticalLayout.addWidget(self.import_button_onlyiconwidget)
        self.export_button_onlyiconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.export_button_onlyiconwidget.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/data-export-icon-0.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.export_button_onlyiconwidget.setIcon(icon6)
        self.export_button_onlyiconwidget.setIconSize(QtCore.QSize(20, 20))
        self.export_button_onlyiconwidget.setCheckable(True)
        self.export_button_onlyiconwidget.setAutoExclusive(True)
        self.export_button_onlyiconwidget.setObjectName("export_button_onlyiconwidget")
        self.verticalLayout.addWidget(self.export_button_onlyiconwidget)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.pushButton_5.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/data-export-icon-0.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_5.setIcon(icon7)
        self.pushButton_5.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout_3.addWidget(self.pushButton_5)
        spacerItem2 = QtWidgets.QSpacerItem(20, 531, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout_3.addItem(spacerItem2)
        self.exit_iconwidget = QtWidgets.QPushButton(parent=self.widget_onlyicons)
        self.exit_iconwidget.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/x_close_cross_delete_icon_159748.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.exit_iconwidget.setIcon(icon8)
        self.exit_iconwidget.setIconSize(QtCore.QSize(20, 20))
        self.exit_iconwidget.setCheckable(True)
        self.exit_iconwidget.setAutoExclusive(True)
        self.exit_iconwidget.setObjectName("exit_iconwidget")
        self.verticalLayout_3.addWidget(self.exit_iconwidget)
        self.gridLayout.addWidget(self.widget_onlyicons, 0, 0, 1, 1)
        self.widget_expanded = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_expanded.setMaximumSize(QtCore.QSize(147, 16777215))
        self.widget_expanded.setObjectName("widget_expanded")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_expanded)
        self.verticalLayout_4.setContentsMargins(0, 9, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(parent=self.widget_expanded)
        self.label_2.setMinimumSize(QtCore.QSize(40, 40))
        self.label_2.setMaximumSize(QtCore.QSize(40, 40))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("icons/ipng_logo.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(parent=self.widget_expanded)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("QLabel {\n"
"    font-size: 12pt;\n"
"    color: #eedd66;\n"
"    font-weight: bold;\n"
"    border-radius: 8px;\n"
"}")
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem3 = QtWidgets.QSpacerItem(40, 30, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.verticalLayout_2.addItem(spacerItem3)
        self.home_button_iconexpandedwidget = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.home_button_iconexpandedwidget.setIcon(icon3)
        self.home_button_iconexpandedwidget.setCheckable(True)
        self.home_button_iconexpandedwidget.setAutoExclusive(True)
        self.home_button_iconexpandedwidget.setObjectName("home_button_iconexpandedwidget")
        self.verticalLayout_2.addWidget(self.home_button_iconexpandedwidget)
        self.articleDB_button = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.articleDB_button.setIcon(icon4)
        self.articleDB_button.setCheckable(True)
        self.articleDB_button.setAutoExclusive(True)
        # self.articleDB_button.clicked.connect(lambda: self.dataLoadFromDB(self.tableWidget_article_2, 'SELECT * FROM article'))
        self.articleDB_button.setObjectName("articleDB_button")
        self.verticalLayout_2.addWidget(self.articleDB_button)
        self.article_authorDB_button = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.article_authorDB_button.setIcon(icon4)
        self.article_authorDB_button.setCheckable(True)
        self.article_authorDB_button.setAutoExclusive(True)
        self.article_authorDB_button.setObjectName("article_authorDB_button")
        self.verticalLayout_2.addWidget(self.article_authorDB_button)
        self.authorsDB_button = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.authorsDB_button.setIcon(icon4
                                      )
        self.authorsDB_button.setCheckable(True)
        self.authorsDB_button.setAutoExclusive(True)
        self.authorsDB_button.setObjectName("authorsDB_button")
        self.verticalLayout_2.addWidget(self.authorsDB_button)
        self.addingdatatoBD_button = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.addingdatatoBD_button.setIcon(icon4)
        self.addingdatatoBD_button.setCheckable(True)
        self.addingdatatoBD_button.setAutoExclusive(True)
        self.addingdatatoBD_button.setObjectName("addingdatatoBD_button")
        self.verticalLayout_2.addWidget(self.addingdatatoBD_button)
        self.import_button_expandedwidget = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.import_button_expandedwidget.setIcon(icon5)
        self.import_button_expandedwidget.setCheckable(True)
        self.import_button_expandedwidget.setAutoExclusive(True)
        self.import_button_expandedwidget.setObjectName("import_button_expandedwidget")
        self.verticalLayout_2.addWidget(self.import_button_expandedwidget)
        self.export_button_expandedwidget = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.export_button_expandedwidget.setIcon(icon6)
        self.export_button_expandedwidget.setCheckable(True)
        self.export_button_expandedwidget.setAutoExclusive(True)
        self.export_button_expandedwidget.setObjectName("export_button_expandedwidget")
        self.verticalLayout_2.addWidget(self.export_button_expandedwidget)
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.pushButton_2.setIcon(icon7)
        self.pushButton_2.setCheckable(True)
        self.pushButton_2.setAutoExclusive(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout_2.addWidget(self.pushButton_2)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        spacerItem4 = QtWidgets.QSpacerItem(20, 547, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout_4.addItem(spacerItem4)
        self.exit_button_expandedwidget = QtWidgets.QPushButton(parent=self.widget_expanded)
        self.exit_button_expandedwidget.setIcon(icon8)
        self.exit_button_expandedwidget.setCheckable(True)
        self.exit_button_expandedwidget.setAutoExclusive(True)
        self.exit_button_expandedwidget.setObjectName("exit_button_expandedwidget")
        self.verticalLayout_4.addWidget(self.exit_button_expandedwidget)
        self.gridLayout.addWidget(self.widget_expanded, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(4)
        self.exit_iconwidget.clicked.connect(MainWindow.close) # type: ignore
        self.articleDB_button_iconwidget.toggled['bool'].connect(self.articleDB_button.setChecked) # type: ignore
        self.import_button_onlyiconwidget.toggled['bool'].connect(self.import_button_expandedwidget.setChecked) # type: ignore
        self.pushButton_5.toggled['bool'].connect(self.pushButton_2.setChecked) # type: ignore
        self.articleDB_button.toggled['bool'].connect(self.articleDB_button_iconwidget.setChecked) # type: ignore
        self.pushButton_2.toggled['bool'].connect(self.pushButton_5.setChecked) # type: ignore
        self.addingdatatoBD_button_iconwidget.toggled['bool'].connect(self.addingdatatoBD_button.setChecked) # type: ignore
        self.home_button_iconexpandedwidget.toggled['bool'].connect(self.home_button_iconwidget.setChecked) # type: ignore
        self.home_button_iconwidget.toggled['bool'].connect(self.home_button_iconexpandedwidget.setChecked) # type: ignore
        self.export_button_onlyiconwidget.toggled['bool'].connect(self.export_button_expandedwidget.setChecked) # type: ignore
        self.export_button_expandedwidget.toggled['bool'].connect(self.export_button_onlyiconwidget.setChecked) # type: ignore
        self.addingdatatoBD_button.toggled['bool'].connect(self.addingdatatoBD_button_iconwidget.setChecked) # type: ignore
        self.import_button_expandedwidget.toggled['bool'].connect(self.import_button_onlyiconwidget.setChecked) # type: ignore
        self.exit_button_expandedwidget.clicked.connect(MainWindow.close) # type: ignore
        self.menu_button.toggled['bool'].connect(self.widget_expanded.setHidden) # type: ignore
        self.menu_button.toggled['bool'].connect(self.widget_onlyicons.setVisible) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("xml2sql", "xml2sql"))
        self.textEdit.setPlaceholderText(_translate("MainWindow", "Введите фамилию"))
        self.comboBox.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox.setItemText(1, _translate("MainWindow", "2018"))
        self.comboBox.setItemText(2, _translate("MainWindow", "2019"))
        self.comboBox.setItemText(3, _translate("MainWindow", "2020"))
        self.comboBox.setItemText(4, _translate("MainWindow", "2021"))
        self.comboBox.setItemText(5, _translate("MainWindow", "2022"))
        self.comboBox.setItemText(6, _translate("MainWindow", "2023"))
        self.comboBox.setItemText(7, _translate("MainWindow", "2024"))
        self.comboBox.setItemText(8, _translate("MainWindow", "2025"))
        self.comboBox.setItemText(9, _translate("MainWindow", "2026"))
        self.comboBox.setItemText(10, _translate("MainWindow", "2027"))
        self.comboBox.setItemText(11, _translate("MainWindow", "2028"))
        self.Primary.setText(_translate("MainWindow", "Поиск"))
        #self.changeDatainDatabaseButton_2.setText(_translate("MainWindow", "Изменить данные в БД"))
        self.add_one_row_button.setText(_translate("MainWindow", "Добавить строку в Базу Данных"))
        self.label_4.setText(_translate("MainWindow", "<strong>Импорт XML Файла </strong>"))
        self.pushButton.setText(_translate("MainWindow", "Export to Excel"))
        self.Primary_3.setText(_translate("MainWindow", "Предпросмотр"))
        self.textEdit_2.setPlaceholderText(_translate("MainWindow", "Введите фамилию"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "2018"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "2019"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "2020"))
        self.comboBox_2.setItemText(4, _translate("MainWindow", "2021"))
        self.comboBox_2.setItemText(5, _translate("MainWindow", "2022"))
        self.comboBox_2.setItemText(6, _translate("MainWindow", "2023"))
        self.comboBox_2.setItemText(7, _translate("MainWindow", "2024"))
        self.comboBox_2.setItemText(8, _translate("MainWindow", "2025"))
        self.comboBox_2.setItemText(9, _translate("MainWindow", "2026"))
        self.comboBox_2.setItemText(10, _translate("MainWindow", "2027"))
        self.comboBox_2.setItemText(11, _translate("MainWindow", "2028"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "2018"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "2019"))
        self.comboBox_3.setItemText(3, _translate("MainWindow", "2020"))
        self.comboBox_3.setItemText(4, _translate("MainWindow", "2021"))
        self.comboBox_3.setItemText(5, _translate("MainWindow", "2022"))
        self.comboBox_3.setItemText(6, _translate("MainWindow", "2023"))
        self.comboBox_3.setItemText(7, _translate("MainWindow", "2024"))
        self.comboBox_3.setItemText(7, _translate("MainWindow", "2024"))
        self.comboBox_3.setItemText(8, _translate("MainWindow", "2025"))
        self.comboBox_3.setItemText(9, _translate("MainWindow", "2026"))
        self.comboBox_3.setItemText(10, _translate("MainWindow", "2027"))
        self.comboBox_3.setItemText(11, _translate("MainWindow", "2028"))
        self.general_data_export_button.setText(_translate("MainWindow", "Export to Excel"))
        self.label_3.setText(_translate("MainWindow", "  Database"))
        self.home_button_iconexpandedwidget.setText(_translate("MainWindow", "Главная"))
        self.articleDB_button.setText(_translate("MainWindow", "article"))
        self.article_authorDB_button.setText(_translate("MainWindow", "article_authors_linkage"))
        self.addingdatatoBD_button.setText(_translate("MainWindow", "Добавление данных"))
        self.import_button_expandedwidget.setText(_translate("MainWindow", "Импорт"))
        self.export_button_expandedwidget.setText(_translate("MainWindow", "Экспорт"))
        self.pushButton_2.setText(_translate("MainWindow", "Общий экспорт"))
        self.authorsDB_button.setText(_translate("MainWindow", "authors_organisations"))
        self.exit_button_expandedwidget.setText(_translate("MainWindow", "Выход"))

    def handleItemChanged(self, item):
        try:
            row = item.row()
            column = item.column()
            new_value = item.text()
            record_id = self.tableWidget_article_2.item(row, 0).text()
            column_name = self.tableWidget_article_2.horizontalHeaderItem(column).text()

            conn = psycopg2.connect(database=database_parametres['dbname'],
                                    user=database_parametres['user'],
                                    password=database_parametres['password'],
                                    host=database_parametres['host'],
                                    port=database_parametres['port'])
            cursor = conn.cursor()

            update_query = f"WITH cte AS (SELECT *, ROW_NUMBER() OVER (ORDER BY item_id) AS rnk FROM article) " \
                           f"UPDATE article AS a SET {column_name} = %s FROM cte AS x WHERE a.item_id = x.item_id AND x.rnk = %s"
            cursor.execute(update_query, (new_value, row + 1))
            conn.commit()

            print(f"Cell at row {row}, column {column} changed to: {new_value}")
        except psycopg2.Error as e:
            print(f"Error: {e}")
        except Exception as e:
            print(f"An error occurred: {e}")
        finally:
            cursor.close()
            conn.close()

    def handleItemChanged_2(self, item):
        try:
            row = item.row()
            column = item.column()
            new_value = item.text()
            record_id = self.tableWidget_article_author.item(row, 0).text()
            column_name = self.tableWidget_article_author.horizontalHeaderItem(column).text()

            conn = psycopg2.connect(database=database_parametres['dbname'],
                                    user=database_parametres['user'],
                                    password=database_parametres['password'],
                                    host=database_parametres['host'],
                                    port=database_parametres['port'])
            cursor = conn.cursor()

            # Use placeholders for column names and values
            update_query = f"WITH cte AS (SELECT *, ROW_NUMBER() OVER (ORDER BY item_id, counter) AS rnk FROM article_authors_linkage) " \
                           f"UPDATE article_authors_linkage AS a SET {column_name} = %s FROM cte AS x WHERE a.item_id = x.item_id AND a.counter = x.counter AND x.rnk = %s"
            cursor.execute(update_query, (new_value, row + 1))
            conn.commit()

            print(f"Cell at row {row}, column {column} changed to: {new_value}")
        except psycopg2.Error as e:
            print(f"Error: {e}")
        except Exception as e:
            print(f"An error occurred: {e}")
        finally:
            cursor.close()
            conn.close()
    def handleItemChanged_3(self, item):
        try:
            row = item.row()
            column = item.column()
            new_value = item.text()
            record_id = self.tableWidget_authors.item(row, 0).text()
            column_name = self.tableWidget_authors.horizontalHeaderItem(column).text()

            conn = psycopg2.connect(database=database_parametres['dbname'],
                                    user=database_parametres['user'],
                                    password=database_parametres['password'],
                                    host=database_parametres['host'],
                                    port=database_parametres['port'])
            cursor = conn.cursor()

            # Use placeholders for column names and values
            update_query = f"WITH cte AS (SELECT *, ROW_NUMBER() OVER (ORDER BY counter) AS rnk FROM authors_organisations) " \
                           f"UPDATE authors_organisations AS a SET {column_name} = %s FROM cte AS x WHERE a.counter = x.counter AND x.rnk = %s"
            cursor.execute(update_query, (new_value, row + 1))
            conn.commit()

            print(f"Cell at row {row}, column {column} changed to: {new_value}")
        except psycopg2.Error as e:
            print(f"Error: {e}")
        except Exception as e:
            print(f"An error occurred: {e}")
        finally:
            cursor.close()
            conn.close()
    def getColumnNames(self, table_name):
        query = f"SELECT * FROM {table_name} WHERE 1=0;"
        connection_str = f"postgresql://{database_parametres['user']}:{database_parametres['password']}@{database_parametres['host']}:{database_parametres['port']}/{database_parametres['dbname']}"
        engine = create_engine(connection_str)
        existing_data = pd.read_sql(query, engine)
        data = pd.read_sql_query(query, engine)
        column_names = data.columns.tolist()
        return column_names

    def getNumberofRows(self):
        query = '''
        SELECT COUNT(*)
        FROM article
        '''
        conn = psycopg2.connect(database=database_parametres['dbname'],
                                        user=database_parametres['user'],
                                        password=database_parametres['password'],
                                        host=database_parametres['host'],
                                        port=database_parametres['port'])
        cur = conn.cursor()
        cur.execute(query)
        result = cur.fetchall()
        cur.close()
        conn.close()
        print(result[0][0])
        return result[0][0]
    def loadFullNamesFromDB(self):
        conn = psycopg2.connect(database=database_parametres['dbname'],
                                user=database_parametres['user'],
                                password=database_parametres['password'],
                                host=database_parametres['host'],
                                port=database_parametres['port'])
        cur = conn.cursor()
        cur.execute("SELECT DISTINCT author_name || ' ' ||  author_initials FROM authors_organisations")
        result = cur.fetchall()
        result = [item[0] for item in result]
        cur.close()
        conn.close()
        return result

    def dataLoadFromDB(self, tableWidget, query):
        conn = psycopg2.connect(database=database_parametres['dbname'],
                                        user=database_parametres['user'],
                                        password=database_parametres['password'],
                                        host=database_parametres['host'],
                                        port=database_parametres['port'])
        cur = conn.cursor()
        cur.execute(query)
        result = cur.fetchall()


        for row_number, row_data in enumerate(result):
                tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        tableWidget.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        cur.close()
        conn.close()

    def insertNewRowInTable(self, dataframe):
        connection_str = f"postgresql://{database_parametres['user']}:{database_parametres['password']}@{database_parametres['host']}:{database_parametres['port']}/{database_parametres['dbname']}"
        engine = create_engine(connection_str)
        dataframe.to_sql('whole_table', engine, index=False, if_exists='replace')

    def readDataFromTableWidgetAndPushToSQL(self,tableWidget):
        rowCount = tableWidget.rowCount()
        columnCount = tableWidget.columnCount()
        data = []
        for row in range(rowCount):
            rowData = []
            for column in range(columnCount):
                widgetItem = tableWidget.item(row, column)
                if (widgetItem):
                    rowData.append(widgetItem.text())
            data.append(rowData)

        print(data[0])
        data_from_function = data
        column_names = self.getColumnNames('article')
        df = pd.DataFrame(data_from_function, columns=column_names)
        self.insertNewRowInTable(df)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
